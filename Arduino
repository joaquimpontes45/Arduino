#include <WiFi.h>
#include <HTTPClient.h>
#include <DHT.h>


const char* ssid = "Joaquim";//Joaquim
const char* password = "123456789";//123456789  


#define DHTPIN 5       
#define DHTTYPE DHT22  // Tipo de sensor
DHT dht(DHTPIN, DHTTYPE);

const String apiUrl = "https://ecowater.etegaranhuns.com.br/dados";

// Pinos de controle
int pinoLigarBomba = 17;          // Porta do relé da bomba
int pinoLigarArcodicionado = 16;  // Porta do relé do ar condicionado
float pinoBuzzer = 04;            // Pino do buzzer
float umidade_solo = 34;          // Pino do sensor de umidade do solo
float sensor_agua_aspesor = 35;   // Pino do sensor de água

float status_real_temp = 0;
float status_umidade = 0;
float sensor_agua;

void setup() {
  Serial.begin(9600);


  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Conectando ao WiFi...");
  }
  Serial.println("Conectado ao WiFi!");



  Serial.begin(9600);
  pinMode(umidade_solo, OUTPUT);
  //pinMode(temperatura_ambiente, OUTPUT);
  pinMode(sensor_agua_aspesor, INPUT);
  pinMode(pinoLigarBomba, OUTPUT);
  pinMode(pinoBuzzer, OUTPUT);
  pinMode(pinoLigarArcodicionado, OUTPUT);
  dht.begin();
}

void loop() {
  HTTPClient http;
  http.begin(apiUrl);
  int httpResponseCode = http.GET();

  if (httpResponseCode == 200) {
    String payload = http.getString();
    Serial.println("Resposta da API:");
    Serial.println(payload);


    int posStatusBomba = payload.indexOf("\"status_bomba\":");
    if (posStatusBomba != -1) {

      String status_bomba_str = payload.substring(posStatusBomba + 15, posStatusBomba + 16);
      int status_bomba = status_bomba_str.toInt();                                            

      Serial.print("status_bomba: ");
      Serial.println(status_bomba);

 
      if (status_bomba == 1) {
        Serial.println("Entrou no if - Ligando Sistema");
        iniciarSistema();
      } else if (status_bomba == 0) {
        Serial.println("Entrou no elif - Desligando Sistema");
        desligarSistema();
      }
    } else {
      Serial.println("Não encontrou 'status_bomba' no JSON");
    }
  } else {
    Serial.print("Erro na requisição HTTP: ");
    Serial.println(httpResponseCode);
  }

  http.end();
  delay(1000);
}

void iniciarSistema() {

  float temperatura_ambiente = dht.readTemperature();


  Serial.print("Temperatura: ");
  Serial.println(temperatura_ambiente);

  status_real_temp = temperatura_ambiente;
  if (status_real_temp >= 30.00) {
    digitalWrite(pinoLigarArcodicionado, HIGH);
    //digitalWrite(pinoLigarBomba, HIGH);
  } else {
    digitalWrite(pinoLigarArcodicionado, LOW);
    //digitalWrite(pinoLigarBomba, LOW);
  }

  status_umidade = analogRead(umidade_solo);

  float umidadeSoloPorcentagem = status_umidade / 5;
  if (umidadeSoloPorcentagem >= 70 && umidadeSoloPorcentagem <= 90) {
    digitalWrite(pinoLigarBomba, LOW);
  } else if (umidadeSoloPorcentagem < 70) {
    digitalWrite(pinoLigarBomba, HIGH);
  } else {
    digitalWrite(pinoLigarBomba, LOW);
  }
  Serial.print("Porcentagem sensor solo: ");
  Serial.println(umidadeSoloPorcentagem);

  float sensor_agua = analogRead(sensor_agua_aspesor);
  float sensor_agua_aspesorPorcentagem2 = (sensor_agua / 1823.0) * 100;
  Serial.print("Umidade1: ");
  Serial.println(sensor_agua);
  Serial.print("Umidade: ");
  Serial.println(sensor_agua_aspesorPorcentagem2);

  

  Serial.println(umidadeSoloPorcentagem);
  if (sensor_agua_aspesorPorcentagem2 <= 10 && umidadeSoloPorcentagem < 70) {
    digitalWrite(pinoBuzzer, HIGH);     //HIGH LIGAR
    digitalWrite(pinoLigarBomba, LOW);  //LOW DESLIGAR
    delay(1000);                        //300000 5 minutos
    digitalWrite(pinoBuzzer, LOW);
  } else if (sensor_agua_aspesorPorcentagem2 == 100) {  //40 PORCENTO ANTES

    digitalWrite(pinoLigarBomba, HIGH);
  }
  enviarDados(temperatura_ambiente, sensor_agua_aspesorPorcentagem2);
  delay(1000);

}


void enviarDados(float temperatura, float umidade) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    const String our = "https://ecowater.etegaranhuns.com.br/sensor";
    http.begin(our);

    String payload = "{";
    payload += "\"temperatura\": " + String(temperatura, 2) + ",";
    payload += "\"umidade\": " + String(umidade, 2);
    payload += "}";

    http.addHeader("Content-Type", "application/json");
    int httpResponseCode = http.POST(payload);

    // Verifica a resposta da API
    if (httpResponseCode > 0) {
      Serial.print("Resposta da API: ");
      Serial.println(http.getString());
    } else {
      Serial.print("Erro ao enviar dados: ");
      Serial.println(httpResponseCode);
    }
    http.end(); 
  } else {
    Serial.println("Erro: Não conectado ao Wi-Fi");
  }
}

void desligarSistema() {
  digitalWrite(pinoLigarBomba, LOW);
  digitalWrite(pinoLigarArcodicionado, LOW);
  Serial.println("Sistema desligado!");
}
